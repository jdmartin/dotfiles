Plug 'dense-analysis/ale'

" Plugin Settings
let g:ale_warn_about_trailing_whitespace = 0  " Disable whitespace warnings
let g:ale_echo_msg_error_str = 'E'
let g:ale_echo_msg_warning_str = 'W'
let g:ale_echo_msg_format = '[%linter%] %s [%severity%]'
let g:ale_completion_enabled = 0

{{- if eq .chezmoi.os "darwin" }}
let g:ale_linters = {
\   'python': ['bandit'],
\   'xml': ['xmllint']
\ }
let g:ale_fixers = {}
{{ else }}
let g:ale_linters = {
\   'python': ['bandit'],
\   'xml': ['xmllint'] 
\ }
let g:ale_fixers = {}
{{ end -}}

let g:ale_fix_on_save = 0  " Let CoC handle formatting
let g:ale_lint_on_save = 1
let g:ale_pattern_options = { '\.env$': {'ale_enabled': 0} }

" Disable ALE for everything except Bandit and xmllint
let g:ale_enabled = 1
let g:ale_linter_aliases = {'fish': []}

" Set .env files to conf type to avoid shellcheck issues
autocmd BufRead,BufNewFile .env set filetype=conf

" Check if a file has a Fish shebang and map it to the 'fish' filetype:
augroup ale_ignore_fish
    autocmd!
    " Map files ending in .sh with Fish shebang to the fish filetype
    autocmd BufRead,BufNewFile *.sh if getline(1) =~ '^#!/usr/bin/env fish' | set filetype=fish | endif
augroup END

" Disable ALE linting for all other file types
let g:ale_linters_explicit = 1

" Disable in-line errors, since we're using local list
let g:ale_virtualtext_cursor = 0
let g:ale_virtualtext_prefix = ''
